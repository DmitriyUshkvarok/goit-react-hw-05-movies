{"version":3,"file":"static/js/233.0acf7d25.chunk.js","mappings":"4MACA,EAAiC,iC,gFCAjC,EAA4B,6BAA5B,EAAyE,iC,SCkBzE,MAfA,YAAgC,IAAXA,EAAU,EAAVA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,SAAC,KAAD,CAAMC,GAAE,gBAAWF,GAAMG,MAAO,CAAEC,KAAMT,GAAxC,UACE,eAAIE,UAAWC,EAAf,UACE,uBAAIG,OAFiDD,EAD/C,KASjB,ECsDD,MA/DA,WACE,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsCF,EAAAA,EAAAA,UAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAoCJ,EAAAA,EAAAA,WAAS,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAekB,EAAf,KACA,GAA8BP,EAAAA,EAAAA,WAAS,GAAvC,eAAOQ,EAAP,KAAgBC,EAAhB,KAEMC,GAAcC,EAAAA,EAAAA,cAAY,SAAAC,GAC9BN,GAAc,GAEdO,EAAAA,EAAAA,cACiBD,GACdE,MAAK,SAAAC,GACJT,GAAc,GACW,IAArBS,EAAUC,QACZC,EAAAA,GAAAA,MAAY,8CAGdf,GAAU,SAAAgB,GAAU,wBAAQA,IAAR,OAAuBH,GAAvB,IACpBX,EAAeQ,EAChB,IACAO,OAAM,SAAAC,GACLd,GAAc,EACf,GACJ,GAAE,IAsBH,OApBAe,EAAAA,EAAAA,YAAU,WAER,OADAZ,GAAW,GACJ,kBAAMA,GAAW,EAAjB,CACR,GAAE,KAEHY,EAAAA,EAAAA,YAAU,WACJb,GAA6B,IAAlBP,EAAOe,QACpBN,EAAYP,EAEf,GAAE,CAACA,EAAaO,EAAaT,EAAOe,OAAQR,KAE7Ca,EAAAA,EAAAA,YAAU,WACRR,EAAAA,EAAAA,iBAEGC,MAAK,SAAAQ,GACJf,EAAUe,EACX,IACAH,MAAM,QACV,GAAE,KAGD,oBAAS3B,UAAWC,EAApB,UACE,UAAC8B,EAAA,EAAD,YACE,SAAC,EAAD,CAAWlC,OAAQA,KACnB,SAAC,IAAD,CACEmC,WAAYvB,EAAOe,OACnBS,KAAM,kBAAMf,EAAYP,EAAc,EAAhC,EACNuB,SAAUrB,EACVsB,QAAQ,sCAJV,UAME,SAACC,EAAA,EAAD,CAAY3B,OAAQA,UAK7B,C","sources":["webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","webpack://react-homework-template/./src/components/GanreList/GanreList.module.css?562b","components/GanreList/GanreList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"trandingMovies\":\"HomePage_trandingMovies__2UC1J\"};","// extracted by mini-css-extract-plugin\nexport default {\"ganreList\":\"GanreList_ganreList__Ukkui\",\"ganreListItem\":\"GanreList_ganreListItem__oINk6\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './GanreList.module.css';\nimport PropTypes from 'prop-types';\n\nfunction GenreList({ genres }) {\n  const location = useLocation();\n\n  return (\n    <ul className={css.ganreList}>\n      {genres.map(({ id, name }) => (\n        <Link to={`genre/${id}`} state={{ from: location }} key={id}>\n          <li className={css.ganreListItem}>\n            <p>{name}</p>\n          </li>\n        </Link>\n      ))}\n    </ul>\n  );\n}\nexport default GenreList;\n\nGenreList.propTypes = {\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import css from './HomePage.module.css';\nimport Container from 'components/Container/Container';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useState, useEffect, useCallback } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport apiTheMovieDB from 'service/kino-api';\nimport { toast } from 'react-toastify';\nimport GenreList from 'components/GanreList/GanreList';\n\nfunction HomePage() {\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isFetching, setIsFetching] = useState(false);\n  const [genres, setGenres] = useState([]);\n  const [mounted, setMounted] = useState(false);\n\n  const fetchMovies = useCallback(page => {\n    setIsFetching(true);\n\n    apiTheMovieDB\n      .fetchTrending(page)\n      .then(newMovies => {\n        setIsFetching(false);\n        if (newMovies.length === 0) {\n          toast.error(\"sorry, that's all the movies we could find\");\n        }\n\n        setMovies(prevMovies => [...prevMovies, ...newMovies]);\n        setCurrentPage(page);\n      })\n      .catch(error => {\n        setIsFetching(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    setMounted(true);\n    return () => setMounted(false);\n  }, []);\n\n  useEffect(() => {\n    if (mounted && movies.length === 0) {\n      fetchMovies(currentPage);\n    }\n  }, [currentPage, fetchMovies, movies.length, mounted]);\n\n  useEffect(() => {\n    apiTheMovieDB\n      .fetchAllgenres()\n      .then(data => {\n        setGenres(data);\n      })\n      .catch('error');\n  }, []);\n\n  return (\n    <section className={css.trandingMovies}>\n      <Container>\n        <GenreList genres={genres} />\n        <InfiniteScroll\n          dataLength={movies.length}\n          next={() => fetchMovies(currentPage + 1)}\n          hasMore={!isFetching}\n          loader={<p>Loading...</p>}\n        >\n          <MoviesList movies={movies} />\n        </InfiniteScroll>\n      </Container>\n    </section>\n  );\n}\n\nexport default HomePage;\n"],"names":["genres","location","useLocation","className","css","map","id","name","to","state","from","useState","movies","setMovies","currentPage","setCurrentPage","isFetching","setIsFetching","setGenres","mounted","setMounted","fetchMovies","useCallback","page","apiTheMovieDB","then","newMovies","length","toast","prevMovies","catch","error","useEffect","data","Container","dataLength","next","hasMore","loader","MoviesList"],"sourceRoot":""}