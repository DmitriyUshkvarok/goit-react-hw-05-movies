{"version":3,"file":"static/js/533.b34afd6f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ButtonBack/ButtonBack.module.css?8b4f","components/ButtonBack/ButtonBack.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","webpack://react-homework-template/./src/components/MoviesItem/MoviesItem.module.css?58c2","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/ActorsMoviePage/ActorsMoviesPage.module.css?3556","pages/ActorsMoviePage/ActorsMoviePage.jsx","service/kino-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnBack\":\"ButtonBack_btnBack__tjozC\"};","import css from './ButtonBack.module.css';\n\nconst ButtonBack = () => {\n  return (\n    <>\n      <button className={css.btnBack} type=\"button\">\n        &#8592; Go Back\n      </button>\n    </>\n  );\n};\n\nexport default ButtonBack;\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"moviesItem\":\"MoviesList_moviesItem__r+0sq\"};","// extracted by mini-css-extract-plugin\nexport default {\"cardWrapper\":\"MoviesItem_cardWrapper__mxmjM\",\"imgWrapper\":\"MoviesItem_imgWrapper__TWN0D\",\"moviesImg\":\"MoviesItem_moviesImg__MqMs7\",\"cardTitle\":\"MoviesItem_cardTitle__bY-Ko\",\"ratingStarsContainer\":\"MoviesItem_ratingStarsContainer__XGfJ5\",\"goldStar\":\"MoviesItem_goldStar__duxiK\",\"grayStar\":\"MoviesItem_grayStar__7ijiP\",\"ratingText\":\"MoviesItem_ratingText__Hzr+S\",\"ratingNumber\":\"MoviesItem_ratingNumber__6ftL3\"};","import css from './MoviesItem.module.css';\n\nfunction MoviesItem({ poster_path, title, vote_average }) {\n  const percentRating = vote_average * 10; // convert 0-10 rating to percentage\n  const goldStars = Math.floor(percentRating / 10); // number of gold stars\n  // eslint-disable-next-line no-unused-vars\n  const grayStars = 10 - goldStars; // number of gray stars\n\n  // create an array of stars with the appropriate color\n  const ratingStars = Array.from({ length: 10 }, (_, i) => {\n    if (i < goldStars) {\n      return (\n        <span key={`star-${i}`} className={css.goldStar}>\n          &#9733;\n        </span>\n      );\n    } else {\n      return (\n        <span key={`star-${i}`} className={css.grayStar}>\n          &#9733;\n        </span>\n      );\n    }\n  });\n\n  return (\n    <>\n      <div className={css.cardWrapper}>\n        <div className={css.imgWrapper}>\n          <img\n            className={css.moviesImg}\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : 'https://via.placeholder.com/300x400'\n            }\n            alt={title}\n            width={300}\n          />\n        </div>\n        <h3 className={css.cardTitle}>\n          {title ? title : 'Movie without a title'}\n        </h3>\n        <div className={css.ratingStarsContainer}>\n          <p className={css.ratingText}>{vote_average ? ratingStars : 'N/A'}</p>\n          <span className={css.ratingNumber}>\n            {vote_average ? vote_average.toFixed(1) : 'N/A'}\n          </span>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default MoviesItem;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css';\nimport MoviesItem from 'components/MoviesItem/MoviesItem';\n\nfunction MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <ul className={css.moviesList}>\n      {movies.map(({ id, poster_path, title, vote_average }, index) => (\n        <li key={`${id}-${index}`} className={css.moviesItem}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <MoviesItem\n              key={id}\n              id={id}\n              poster_path={poster_path}\n              title={title}\n              vote_average={vote_average}\n            />\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n      vote_average: PropTypes.number,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"actorsMovies\":\"ActorsMoviesPage_actorsMovies__qYM8t\",\"btnBackWrapper\":\"ActorsMoviesPage_btnBackWrapper__Xflc6\"};","import { useState, useEffect } from 'react';\nimport apiTheMovieDB from 'service/kino-api';\nimport ButtonBack from 'components/ButtonBack/ButtonBack';\nimport css from './ActorsMoviesPage.module.css';\nimport { toast } from 'react-toastify';\nimport Container from 'components/Container/Container';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\n\nconst ActorsMoviePage = () => {\n  const { id } = useParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const navigate = useNavigate();\n  // eslint-disable-next-line no-unused-vars\n  const handleGoBack = () => {\n    navigate('/movie/actors/');\n  };\n\n  useEffect(() => {\n    apiTheMovieDB\n      .fetchMoviesbyActors(id)\n      .then(movies => {\n        setMovies(movies);\n        if (movies.length === 0) {\n          toast.error(\"sorry, that's all the actors we could find\");\n        }\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => setLoading(false));\n  }, [id]);\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n  return (\n    <>\n      <Container>\n        <div className={css.btnBackWrapper}>\n          <Link to={'/movie/actors/'}>\n            <ButtonBack />\n          </Link>\n        </div>\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <div className={css.actorsMovies}>\n            {}\n            <MoviesList movies={movies} />\n          </div>\n        )}\n      </Container>\n      ;\n    </>\n  );\n};\n\nexport default ActorsMoviePage;\n","import axios from 'axios';\nconst URL = `https://api.themoviedb.org/3/`;\nconst key = 'f27eea818d2010463700365b0c06a16e';\n\nfunction fetchTrending(page = 1) {\n  return axios\n    .get(`${URL}trending/all/day?api_key=${key}&page=${page}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchSearchMovie(query, page = 1) {\n  return axios\n    .get(`${URL}search/movie?query=${query}&api_key=${key}&page=${page}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchMovieDetalis(id) {\n  return axios\n    .get(`${URL}movie/${id}?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieCredits(id) {\n  return axios\n    .get(`${URL}movie/${id}/credits?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieReview(id) {\n  return axios\n    .get(`${URL}movie/${id}/reviews?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchTrailerMovies(movieId) {\n  return axios\n    .get(`${URL}movie/${movieId}/videos?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchAllgenres() {\n  return axios\n    .get(`${URL}/genre/movie/list?api_key=${key}`)\n    .then(response => response.data.genres);\n}\n\nfunction fetchByGenre(id, page = 1) {\n  return axios\n    .get(`${URL}/discover/movie?api_key=${key}&with_genres=${id}&page=${page}`)\n    .then(response => response.data);\n}\n\nfunction fetchActors(page = 1) {\n  return axios\n    .get(`${URL}person/popular?api_key=${key}&page=${page}`)\n    .then(response => response.data);\n}\n\nfunction fetchMoviesbyActors(id, page = 1) {\n  return axios\n    .get(`${URL}person/${id}/movie_credits?api_key=${key}&page=${page}`)\n    .then(response => response.data.cast);\n}\n\nfunction fetchByYear(page = 1, selectedYear) {\n  return axios\n    .get(\n      `${URL}discover/movie?api_key=${key}&sort_by=popularity.desc&page=${page}&primary_release_year=${selectedYear}`\n    )\n    .then(response => response.data.results);\n}\n\nconst apiTheMovieDB = {\n  fetchMoviesbyActors,\n  fetchTrending,\n  fetchSearchMovie,\n  fetchMovieDetalis,\n  fetchMovieCredits,\n  fetchMovieReview,\n  fetchTrailerMovies,\n  fetchAllgenres,\n  fetchByGenre,\n  fetchActors,\n  fetchByYear,\n};\n\nexport default apiTheMovieDB;\n"],"names":["className","css","type","poster_path","title","vote_average","percentRating","goldStars","Math","floor","ratingStars","Array","from","length","_","i","src","alt","width","toFixed","movies","location","useLocation","map","index","id","to","state","useParams","useState","setMovies","error","setError","loading","setLoading","useNavigate","useEffect","apiTheMovieDB","then","toast","catch","finally","message","Container","ButtonBack","MoviesList","URL","key","fetchMoviesbyActors","page","axios","response","data","cast","fetchTrending","results","fetchSearchMovie","query","fetchMovieDetalis","fetchMovieCredits","fetchMovieReview","fetchTrailerMovies","movieId","fetchAllgenres","genres","fetchByGenre","fetchActors","fetchByYear","selectedYear"],"sourceRoot":""}