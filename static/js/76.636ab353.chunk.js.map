{"version":3,"file":"static/js/76.636ab353.chunk.js","mappings":"yNACA,GAAgB,SAAW,wB,kBC2D3B,MAtDA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACbI,EAAAA,EAAAA,kBACqBV,GAClBW,MAAK,SAAAC,GACJR,EAAQQ,EAAKT,MACbG,GAAa,EACd,IACAO,OAAM,SAAAN,GACLC,EAASD,GACTD,GAAa,EACd,GACJ,GAAE,CAACN,IAEAK,GACK,sCAGLE,GACK,uBAAIA,EAAMO,WAIjB,+BACE,eAAIC,UAAWC,EAAAA,SAAf,SACGb,GAAQA,EAAKc,OAAS,EACrBd,EAAKe,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,GAAvB,OACP,gBAAIN,UAAWC,EAAAA,SAAf,WACE,gBACEM,IACEH,EAAY,0CAC2BA,GACnCI,EAENC,IAAKJ,EACLK,MAAO,OAET,cAAGV,UAAWC,EAAAA,SAAd,SAA6BI,MAVGC,EAD3B,KAeT,oDAKT,C,mCCzDKK,EAAG,gCACHC,EAAM,mCAgCZ,IAAMjB,EAAgB,CACpBkB,cA/BF,WACE,OAAOC,EAAAA,EAAAA,IAAA,UACGH,EADH,oCACkCC,IACtChB,MAAK,SAAAmB,GAAQ,OAAIA,EAASlB,KAAKmB,OAAlB,GACjB,EA4BCC,iBA1BF,SAA0BC,GACxB,OAAOJ,EAAAA,EAAAA,IAAA,UACGH,EADH,8BAC4BO,EAD5B,oBAC6CN,IACjDhB,MAAK,SAAAmB,GAAQ,OAAIA,EAASlB,KAAKmB,OAAlB,GACjB,EAuBCG,kBArBF,SAA2Bb,GACzB,OAAOQ,EAAAA,EAAAA,IAAA,UACGH,EADH,iBACeL,EADf,oBAC6BM,IACjChB,MAAK,SAAAmB,GAAQ,OAAIA,EAASlB,IAAb,GACjB,EAkBCuB,kBAhBF,SAA2Bd,GACzB,OAAOQ,EAAAA,EAAAA,IAAA,UACGH,EADH,iBACeL,EADf,4BACqCM,IACzChB,MAAK,SAAAmB,GAAQ,OAAIA,EAASlB,IAAb,GACjB,EAaCwB,iBAXF,SAA0Bf,GACxB,OAAOQ,EAAAA,EAAAA,IAAA,UACGH,EADH,iBACeL,EADf,4BACqCM,IACzChB,MAAK,SAAAmB,GAAQ,OAAIA,EAASlB,KAAKmB,OAAlB,GACjB,GAUD,K","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","service/kino-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport apiTheMovieDB from 'service/kino-api';\nimport css from './Cast.module.css';\nimport posterimg from '../../images/poster.jpeg';\n\nfunction CastMovie() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    apiTheMovieDB\n      .fetchMovieCredits(movieId)\n      .then(data => {\n        setCast(data.cast);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  return (\n    <>\n      <ul className={css.castList}>\n        {cast && cast.length > 0 ? (\n          cast.map(({ profile_path, name, id }) => (\n            <li className={css.castItem} key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : posterimg\n                }\n                alt={name}\n                width={300}\n              />\n              <p className={css.castName}>{name}</p>\n            </li>\n          ))\n        ) : (\n          <p>No cast members found</p>\n        )}\n      </ul>\n    </>\n  );\n}\n\nexport default CastMovie;\n","import axios from 'axios';\nconst URL = `https://api.themoviedb.org/3/`;\nconst key = 'f27eea818d2010463700365b0c06a16e';\n\nfunction fetchTrending() {\n  return axios\n    .get(`${URL}trending/all/day?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchSearchMovie(query) {\n  return axios\n    .get(`${URL}search/movie?query=${query}&api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchMovieDetalis(id) {\n  return axios\n    .get(`${URL}movie/${id}?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieCredits(id) {\n  return axios\n    .get(`${URL}movie/${id}/credits?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieReview(id) {\n  return axios\n    .get(`${URL}movie/${id}/reviews?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nconst apiTheMovieDB = {\n  fetchTrending,\n  fetchSearchMovie,\n  fetchMovieDetalis,\n  fetchMovieCredits,\n  fetchMovieReview,\n};\n\nexport default apiTheMovieDB;\n"],"names":["movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","error","setError","useEffect","apiTheMovieDB","then","data","catch","message","className","css","length","map","profile_path","name","id","src","posterimg","alt","width","URL","key","fetchTrending","axios","response","results","fetchSearchMovie","query","fetchMovieDetalis","fetchMovieCredits","fetchMovieReview"],"sourceRoot":""}