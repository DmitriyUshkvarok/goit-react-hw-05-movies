{"version":3,"file":"static/js/674.47bb6928.chunk.js","mappings":"2LACA,EAA6B,+BAA7B,EAAyE,+BCAzE,GAAgB,UAAY,+B,kBCuB5B,MArBA,YAA6C,IAAvBA,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,MACjC,OACE,+BACE,iBAAKC,UAAWC,EAAAA,YAAhB,WACE,gBACEC,IACEJ,EAAW,0CAC4BA,GACnCK,EAENC,IAAKL,EACLM,MAAO,OAET,eAAIL,UAAWC,EAAAA,UAAf,SACGF,GAAgB,8BAK1B,ECHD,MAdA,YAAiC,IAAXO,EAAU,EAAVA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIR,UAAWC,EAAf,SACGK,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIZ,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACV,eAAaC,UAAWC,EAAxB,UACE,SAAC,KAAD,CAAMU,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMN,GAA1C,UACE,SAAC,EAAD,CAAYG,GAAIA,EAAIZ,YAAaA,EAAaC,MAAOA,OAFhDW,EADC,KASjB,C,yFCjBD,EAAiC,iC,6CCoBjC,MAfA,WACE,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeS,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,gBAEGC,MAAK,SAAAZ,GAAM,OAAIS,GAAU,OAAIT,GAAlB,IACXa,MAAM,WACV,GAAE,KAED,oBAASnB,UAAWC,EAApB,UACE,SAACmB,EAAA,EAAD,UAAYd,IAAU,SAACe,EAAA,EAAD,CAAYf,OAAQA,OAG/C,C,mCCnBKgB,EAAG,gCACHC,EAAM,mCAgCZ,IAAMN,EAAgB,CACpBO,cA/BF,WACE,OAAOC,EAAAA,EAAAA,IAAA,UACGH,EADH,oCACkCC,IACtCL,MAAK,SAAAQ,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACjB,EA4BCC,iBA1BF,SAA0BC,GACxB,OAAOL,EAAAA,EAAAA,IAAA,UACGH,EADH,8BAC4BQ,EAD5B,oBAC6CP,IACjDL,MAAK,SAAAQ,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACjB,EAuBCG,kBArBF,SAA2BrB,GACzB,OAAOe,EAAAA,EAAAA,IAAA,UACGH,EADH,iBACeZ,EADf,oBAC6Ba,IACjCL,MAAK,SAAAQ,GAAQ,OAAIA,EAASC,IAAb,GACjB,EAkBCK,kBAhBF,SAA2BtB,GACzB,OAAOe,EAAAA,EAAAA,IAAA,UACGH,EADH,iBACeZ,EADf,4BACqCa,IACzCL,MAAK,SAAAQ,GAAQ,OAAIA,EAASC,IAAb,GACjB,EAaCM,iBAXF,SAA0BvB,GACxB,OAAOe,EAAAA,EAAAA,IAAA,UACGH,EADH,iBACeZ,EADf,4BACqCa,IACzCL,MAAK,SAAAQ,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,GACjB,GAUD,K","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","webpack://react-homework-template/./src/components/MoviesItem/MoviesItem.module.css?58c2","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","service/kino-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"moviesItem\":\"MoviesList_moviesItem__r+0sq\",\"MoviesList_moviesItem\":\"MoviesList_MoviesList_moviesItem__X8web\"};","// extracted by mini-css-extract-plugin\nexport default {\"cardTitle\":\"MoviesItem_cardTitle__bY-Ko\"};","import css from './MoviesItem.module.css';\nimport posterimg from '../../images/poster.jpeg';\n\nfunction MoviesItem({ poster_path, title }) {\n  return (\n    <>\n      <div className={css.cardWrapper}>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : posterimg\n          }\n          alt={title}\n          width={300}\n        />\n        <h3 className={css.cardTitle}>\n          {title ? title : 'Movie without a title'}\n        </h3>\n      </div>\n    </>\n  );\n}\n\nexport default MoviesItem;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css';\nimport MoviesItem from 'components/MoviesItem/MoviesItem';\n\nfunction MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <ul className={css.moviesList}>\n      {movies.map(({ id, poster_path, title }) => (\n        <li key={id} className={css.moviesItem}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <MoviesItem id={id} poster_path={poster_path} title={title} />\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"trandingMovies\":\"HomePage_trandingMovies__2UC1J\"};","// import PropTypes from 'prop-types';\nimport css from './HomePage.module.css';\nimport Container from 'components/Container/Container';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport apiTheMovieDB from 'service/kino-api';\nfunction HomePage() {\n  const [movies, setMovies] = useState([]);\n  // const [error, setError] = useState(null);\n  useEffect(() => {\n    apiTheMovieDB\n      .fetchTrending()\n      .then(movies => setMovies([...movies]))\n      .catch('setError');\n  }, []);\n  return (\n    <section className={css.trandingMovies}>\n      <Container>{movies && <MoviesList movies={movies} />}</Container>\n    </section>\n  );\n}\nexport default HomePage;\n\n// HomePage.propTypes = {\n//   movies: PropTypes.arrayOf(PropTypes.shape),\n// };\n","import axios from 'axios';\nconst URL = `https://api.themoviedb.org/3/`;\nconst key = 'f27eea818d2010463700365b0c06a16e';\n\nfunction fetchTrending() {\n  return axios\n    .get(`${URL}trending/all/day?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchSearchMovie(query) {\n  return axios\n    .get(`${URL}search/movie?query=${query}&api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchMovieDetalis(id) {\n  return axios\n    .get(`${URL}movie/${id}?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieCredits(id) {\n  return axios\n    .get(`${URL}movie/${id}/credits?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieReview(id) {\n  return axios\n    .get(`${URL}movie/${id}/reviews?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nconst apiTheMovieDB = {\n  fetchTrending,\n  fetchSearchMovie,\n  fetchMovieDetalis,\n  fetchMovieCredits,\n  fetchMovieReview,\n};\n\nexport default apiTheMovieDB;\n"],"names":["poster_path","title","className","css","src","posterimg","alt","width","movies","location","useLocation","map","id","to","state","from","useState","setMovies","useEffect","apiTheMovieDB","then","catch","Container","MoviesList","URL","key","fetchTrending","axios","response","data","results","fetchSearchMovie","query","fetchMovieDetalis","fetchMovieCredits","fetchMovieReview"],"sourceRoot":""}