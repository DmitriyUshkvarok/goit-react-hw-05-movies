{"version":3,"file":"static/js/511.c2c593ff.chunk.js","mappings":"gOACA,GAAiB,E,UCAjB,EAAuB,wBAAvB,EAA6D,+BAA7D,EAAuG,4B,SCwCvG,MApCA,YAAkC,IAAbA,EAAY,EAAZA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAiBA,OACE,kBAAMC,UAAWC,EAAUL,SAZR,SAAAM,GACnBA,EAAEC,iBACGL,GAKLF,EAASE,GACTC,EAAS,KALPK,EAAAA,GAAAA,MAAY,iCAMf,EAGC,WACE,kBACEJ,UAAWC,EACXI,KAAK,QACLC,MAAOR,EACPS,KAAK,OACLC,aAAa,MACbC,YAAY,uBACZC,SAxBoB,SAAAR,GACxBH,EAASG,EAAES,cAAcL,MAAMM,cAAcC,OAC9C,KAwBG,mBAAQN,KAAK,SAASP,UAAWC,EAAjC,sBAKL,E,wCCyCD,EAtEkB,WAChB,IAAMa,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BpB,EAAAA,EAAAA,UAAS,IAArC,eAAOqB,EAAP,KAAeC,EAAf,KACA,GAA0BtB,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsCF,EAAAA,EAAAA,UAAS,GAA/C,eAAOuB,EAAP,KAAoBC,EAApB,KACA,GAA8BxB,EAAAA,EAAAA,WAAS,GAAvC,eAAOyB,EAAP,KAAgBC,EAAhB,KAEMC,GAAcC,EAAAA,EAAAA,cAClB,SAAAC,GACEH,GAAW,GACXI,EAAAA,EAAAA,iBACoB7B,EAAO4B,GACxBE,MAAK,SAAAC,GACqB,IAArBA,EAAUC,SACZ1B,EAAAA,GAAAA,MAAY,4CACZmB,GAAW,IAEbJ,GAAU,SAAAY,GAAU,wBAAQA,IAAR,OAAuBF,GAAvB,IACpBR,GAAe,SAAAW,GAAQ,OAAIA,EAAW,CAAf,GACxB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EACf,GACJ,GACD,CAACpC,KAGHsC,EAAAA,EAAAA,YAAU,WACRrC,EAAS,IAAIsC,gBAAgBrB,EAASsB,QAAQC,IAAI,SACnD,GAAE,CAACvB,EAASsB,UAEbF,EAAAA,EAAAA,YAAU,WACHtC,GAGL0B,EAAY,EACb,GAAE,CAACA,EAAa1B,IAcjB,OACE,oBAASE,UAAWC,EAAAA,UAApB,UACE,UAACuC,EAAA,EAAD,YACE,SAAC,EAAD,CAAW5C,SAfQ,SAAA6C,GACnBA,IAAa3C,IAGjBqB,EAAU,IACVL,EAAS,UAAD,OAAW2B,IACpB,IAUMvB,IACC,SAAC,IAAD,CACEwB,WAAYxB,EAAOY,OACnBa,KAXa,WACrBnB,EAAYJ,EACb,EAUSE,QAASA,EACTsB,QAAQ,sCAJV,UAME,SAACC,EAAA,EAAD,CAAY3B,OAAQA,UAM/B,C","sources":["pages/MoviesPage/MoviePage.module.css","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Searchbar_form__D-hp5\",\"inputSearch\":\"Searchbar_inputSearch__xAbPo\",\"serchBtn\":\"Searchbar_serchBtn__JmOW6\"};","import { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport css from './Searchbar.module.css';\nimport { useState } from 'react';\n\nfunction Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query) {\n      toast.error('Please, enter your name movie!');\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.inputSearch}\n        name=\"query\"\n        value={query}\n        type=\"text\"\n        autoComplete=\"off\"\n        placeholder=\"Enter the movie name\"\n        onChange={handleQueryChange}\n      />\n      <button type=\"submit\" className={css.serchBtn}>\n        Search\n      </button>\n    </form>\n  );\n}\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport css from './MoviePage.module.css';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport Container from 'components/Container/Container';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport apiTheMovieDB from 'service/kino-api';\nimport { toast } from 'react-toastify';\n\nconst MoviePage = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n\n  const fetchMovies = useCallback(\n    page => {\n      setHasMore(true);\n      apiTheMovieDB\n        .fetchSearchMovie(query, page)\n        .then(newMovies => {\n          if (newMovies.length === 0) {\n            toast.error('sorry ,thats all the movies we cold find');\n            setHasMore(false);\n          }\n          setMovies(prevMovies => [...prevMovies, ...newMovies]);\n          setCurrentPage(prevPage => prevPage + 1);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    },\n    [query]\n  );\n\n  useEffect(() => {\n    setQuery(new URLSearchParams(location.search).get('query'));\n  }, [location.search]);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    fetchMovies(1);\n  }, [fetchMovies, query]);\n\n  const handleFormSubmit = newQuery => {\n    if (newQuery === query) {\n      return;\n    }\n    setMovies([]);\n    navigate(`?query=${newQuery}`);\n  };\n\n  const handleLoadMore = () => {\n    fetchMovies(currentPage);\n  };\n\n  return (\n    <section className={css.searchbar}>\n      <Container>\n        <Searchbar onSubmit={handleFormSubmit} />\n        {movies && (\n          <InfiniteScroll\n            dataLength={movies.length}\n            next={handleLoadMore}\n            hasMore={hasMore}\n            loader={<p>Loading...</p>}\n          >\n            <MoviesList movies={movies} />\n          </InfiniteScroll>\n        )}\n      </Container>\n    </section>\n  );\n};\n\nexport default MoviePage;\n"],"names":["onSubmit","useState","query","setQuery","className","css","e","preventDefault","toast","name","value","type","autoComplete","placeholder","onChange","currentTarget","toLowerCase","trim","navigate","useNavigate","location","useLocation","movies","setMovies","currentPage","setCurrentPage","hasMore","setHasMore","fetchMovies","useCallback","page","apiTheMovieDB","then","newMovies","length","prevMovies","prevPage","catch","error","console","useEffect","URLSearchParams","search","get","Container","newQuery","dataLength","next","loader","MoviesList"],"sourceRoot":""}