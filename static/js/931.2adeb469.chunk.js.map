{"version":3,"file":"static/js/931.2adeb469.chunk.js","mappings":"qSACA,EAA2C,4CAA3C,EAAoG,8B,SCoDpG,MA7CA,WACE,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsCF,EAAAA,EAAAA,UAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KAEMC,GAAcC,EAAAA,EAAAA,cAAW,iBAAC,6GAETC,EAAAA,EAAAA,aAA2BX,EAAIK,GAFtB,OAEtBO,EAFsB,OAG5BR,GAAU,SAAAS,GAAU,wBAAQA,IAAR,OAAuBD,EAAKE,SAA5B,IAHQ,gDAK5BC,EAAAA,GAAAA,MAAY,2BALgB,yDAO7B,CAACf,EAAIK,IAiBR,OAfAW,EAAAA,EAAAA,YAAU,WACR,IAAMP,EAAW,mCAAG,oGACCE,EAAAA,EAAAA,aAA2BX,EAAI,GADhC,OACZY,EADY,OAElBR,EAAUQ,EAAKE,SACfN,EAAcI,EAAKK,aAHD,2CAAH,qDAKjBR,GACD,GAAE,CAACT,KAEJgB,EAAAA,EAAAA,YAAU,WACJX,EAAc,GAChBI,GAEH,GAAE,CAACA,EAAaJ,KAGf,iBAAKa,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,8BACA,SAAC,IAAD,CACEC,WAAYjB,EAAOkB,OACnBC,KAAM,kBAAMhB,EAAeD,EAAc,EAAnC,EACNkB,QAASpB,EAAOkB,OAASd,EACzBiB,QAAQ,uCAJV,UAME,SAACC,EAAA,EAAD,CAAYtB,OAAQA,QAI3B,C,uBCnDD,SAASuB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/pages/GenresPage/GenrePage.module.css?1290","pages/GenresPage/GenrePage.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"genreListMoviesContainer\":\"GenrePage_genreListMoviesContainer__ymZPR\",\"genreTitle\":\"GenrePage_genreTitle__iYW9b\"};","import { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport apiTheMovieDB from 'service/kino-api';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { toast } from 'react-toastify';\nimport css from './GenrePage.module.css';\n\nfunction GenrePage() {\n  const { id } = useParams();\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n\n  const fetchMovies = useCallback(async () => {\n    try {\n      const data = await apiTheMovieDB.fetchByGenre(id, currentPage);\n      setMovies(prevMovies => [...prevMovies, ...data.results]);\n    } catch (error) {\n      toast.error('Failed to fetch movies.');\n    }\n  }, [id, currentPage]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const data = await apiTheMovieDB.fetchByGenre(id, 1);\n      setMovies(data.results);\n      setTotalPages(data.total_pages);\n    };\n    fetchMovies();\n  }, [id]);\n\n  useEffect(() => {\n    if (currentPage > 1) {\n      fetchMovies();\n    }\n  }, [fetchMovies, currentPage]);\n\n  return (\n    <div className={css.genreListMoviesContainer}>\n      <h2 className={css.genreTitle}>Movies by genre</h2>\n      <InfiniteScroll\n        dataLength={movies.length}\n        next={() => setCurrentPage(currentPage + 1)}\n        hasMore={movies.length < totalPages}\n        loader={<h4>Loading...</h4>}\n      >\n        <MoviesList movies={movies} />\n      </InfiniteScroll>\n    </div>\n  );\n}\n\nexport default GenrePage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["id","useParams","useState","movies","setMovies","currentPage","setCurrentPage","totalPages","setTotalPages","fetchMovies","useCallback","apiTheMovieDB","data","prevMovies","results","toast","useEffect","total_pages","className","css","dataLength","length","next","hasMore","loader","MoviesList","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}