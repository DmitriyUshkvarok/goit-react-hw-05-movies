{"version":3,"file":"static/js/76.4e1b818f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","service/kino-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castName\":\"Cast_castName__-i08u\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport apiTheMovieDB from 'service/kino-api';\nimport css from './Cast.module.css';\n\nfunction CastMovie() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    apiTheMovieDB\n      .fetchMovieCredits(movieId)\n      .then(data => {\n        setCast(data.cast);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  return (\n    <>\n      <ul className={css.castList}>\n        {cast && cast.length > 0 ? (\n          cast.map(({ profile_path, name, id }) => (\n            <li className={css.castItem} key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : 'https://via.placeholder.com/200x300'\n                }\n                alt={name}\n                width={200}\n              />\n              <p className={css.castName}>{name}</p>\n            </li>\n          ))\n        ) : (\n          <p>No cast members found</p>\n        )}\n      </ul>\n    </>\n  );\n}\n\nexport default CastMovie;\n","import axios from 'axios';\nconst URL = `https://api.themoviedb.org/3/`;\nconst key = 'f27eea818d2010463700365b0c06a16e';\n\nfunction fetchTrending(page = 1) {\n  return axios\n    .get(`${URL}trending/all/day?api_key=${key}&page=${page}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchSearchMovie(query, page = 1) {\n  return axios\n    .get(`${URL}search/movie?query=${query}&api_key=${key}&page=${page}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchMovieDetalis(id) {\n  return axios\n    .get(`${URL}movie/${id}?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieCredits(id) {\n  return axios\n    .get(`${URL}movie/${id}/credits?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieReview(id) {\n  return axios\n    .get(`${URL}movie/${id}/reviews?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchTrailerMovies(movieId) {\n  return axios\n    .get(`${URL}movie/${movieId}/videos?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchAllgenres() {\n  return axios\n    .get(`${URL}/genre/movie/list?api_key=${key}`)\n    .then(response => response.data.genres);\n}\n\nfunction fetchByGenre(id, page = 1) {\n  return axios\n    .get(`${URL}/discover/movie?api_key=${key}&with_genres=${id}&page=${page}`)\n    .then(response => response.data);\n}\n\nfunction fetchActors(page = 1) {\n  return axios\n    .get(`${URL}person/popular?api_key=${key}&page=${page}`)\n    .then(response => response.data);\n}\n\nfunction fetchMoviesbyActors(id, page = 1) {\n  return axios\n    .get(`${URL}person/${id}/movie_credits?api_key=${key}&page=${page}`)\n    .then(response => response.data.cast);\n}\n\nfunction fetchByYear(page = 1, selectedYear) {\n  return axios\n    .get(\n      `${URL}discover/movie?api_key=${key}&sort_by=popularity.desc&page=${page}&primary_release_year=${selectedYear}`\n    )\n    .then(response => response.data.results);\n}\n\nconst apiTheMovieDB = {\n  fetchMoviesbyActors,\n  fetchTrending,\n  fetchSearchMovie,\n  fetchMovieDetalis,\n  fetchMovieCredits,\n  fetchMovieReview,\n  fetchTrailerMovies,\n  fetchAllgenres,\n  fetchByGenre,\n  fetchActors,\n  fetchByYear,\n};\n\nexport default apiTheMovieDB;\n"],"names":["movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","error","setError","useEffect","apiTheMovieDB","then","data","catch","message","className","css","length","map","profile_path","name","id","src","alt","width","URL","key","fetchMoviesbyActors","page","axios","response","fetchTrending","results","fetchSearchMovie","query","fetchMovieDetalis","fetchMovieCredits","fetchMovieReview","fetchTrailerMovies","fetchAllgenres","genres","fetchByGenre","fetchActors","fetchByYear","selectedYear"],"sourceRoot":""}