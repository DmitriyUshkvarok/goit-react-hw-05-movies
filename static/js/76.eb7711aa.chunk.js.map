{"version":3,"file":"static/js/76.eb7711aa.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","service/kino-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport apiTheMovieDB from 'service/kino-api';\nimport css from './Cast.module.css';\nimport posterimg from '../../images/poster.jpeg';\n\nfunction CastMovie() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    apiTheMovieDB\n      .fetchMovieCredits(movieId)\n      .then(data => {\n        setCast(data.cast);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  return (\n    <>\n      <ul className={css.castList}>\n        {cast && cast.length > 0 ? (\n          cast.map(({ profile_path, name, id }) => (\n            <li className={css.castItem} key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : posterimg\n                }\n                alt={name}\n                width={300}\n              />\n              <p className={css.castName}>{name}</p>\n            </li>\n          ))\n        ) : (\n          <p>No cast members found</p>\n        )}\n      </ul>\n    </>\n  );\n}\n\nexport default CastMovie;\n","import axios from 'axios';\nconst URL = `https://api.themoviedb.org/3/`;\nconst key = 'f27eea818d2010463700365b0c06a16e';\n\nfunction fetchTrending(page = 1) {\n  return axios\n    .get(`${URL}trending/all/day?api_key=${key}&page=${page}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchSearchMovie(query, page = 1) {\n  return axios\n    .get(`${URL}search/movie?query=${query}&api_key=${key}&page=${page}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchMovieDetalis(id) {\n  return axios\n    .get(`${URL}movie/${id}?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieCredits(id) {\n  return axios\n    .get(`${URL}movie/${id}/credits?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieReview(id) {\n  return axios\n    .get(`${URL}movie/${id}/reviews?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchTrailerMovies(movieId) {\n  return axios\n    .get(`${URL}movie/${movieId}/videos?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchAllgenres() {\n  return axios\n    .get(`${URL}/genre/movie/list?api_key=${key}`)\n    .then(response => response.data.genres);\n}\n\nfunction fetchByGenre(id, page = 1) {\n  return axios\n    .get(`${URL}/discover/movie?api_key=${key}&with_genres=${id}&page=${page}`)\n    .then(response => response.data);\n}\n\nfunction fetchActors(page = 1) {\n  return axios\n    .get(`${URL}person/popular?api_key=${key}&page=${page}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchByYear(page = 1, selectedYear) {\n  return axios\n    .get(\n      `${URL}discover/movie?api_key=${key}&sort_by=popularity.desc&page=${page}&primary_release_year=${selectedYear}`\n    )\n    .then(response => response.data.results);\n}\n// fetchByYear();\n\nconst apiTheMovieDB = {\n  fetchTrending,\n  fetchSearchMovie,\n  fetchMovieDetalis,\n  fetchMovieCredits,\n  fetchMovieReview,\n  fetchTrailerMovies,\n  fetchAllgenres,\n  fetchByGenre,\n  fetchActors,\n  fetchByYear,\n};\n\nexport default apiTheMovieDB;\n"],"names":["movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","error","setError","useEffect","apiTheMovieDB","then","data","catch","message","className","css","length","map","profile_path","name","id","src","posterimg","alt","width","URL","key","fetchTrending","page","axios","response","results","fetchSearchMovie","query","fetchMovieDetalis","fetchMovieCredits","fetchMovieReview","fetchTrailerMovies","fetchAllgenres","genres","fetchByGenre","fetchActors","fetchByYear","selectedYear"],"sourceRoot":""}