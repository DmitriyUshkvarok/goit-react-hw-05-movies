{"version":3,"file":"static/js/394.d6f27d30.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MoviesPage/MoviePage.module.css?dc7a","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","webpack://react-homework-template/./src/components/MoviesBar/MoviesBar.module.css?9446","webpack://react-homework-template/./src/components/SearchByYear/SearchByYear.module.css?3dbb","components/ButtonLoadMore/ButtonLoadMore.module.css","components/ButtonLoadMore/ButtonLoadMore.jsx","components/SearchByYear/SearchByYear.jsx","components/MoviesBar/MoviesBar.jsx","pages/MoviesPage/MoviePage.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"MoviePage_searchbar__Hfnpz\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Searchbar_form__D-hp5\",\"inputSearch\":\"Searchbar_inputSearch__xAbPo\",\"serchBtn\":\"Searchbar_serchBtn__JmOW6\"};","import { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport css from './Searchbar.module.css';\nimport { useState } from 'react';\n\nfunction Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query) {\n      toast.error('Please, enter your name movie!');\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.inputSearch}\n        name=\"query\"\n        value={query}\n        type=\"text\"\n        autoComplete=\"off\"\n        placeholder=\"Enter the movie name\"\n        onChange={handleQueryChange}\n      />\n      <button type=\"submit\" className={css.serchBtn}>\n        Search\n      </button>\n    </form>\n  );\n}\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieBarWrapper\":\"MoviesBar_movieBarWrapper__1NLjU\",\"movieBarList\":\"MoviesBar_movieBarList__OTYcq\",\"movieBarListItem\":\"MoviesBar_movieBarListItem__e8kT6\"};","// extracted by mini-css-extract-plugin\nexport default {\"selectedYear\":\"SearchByYear_selectedYear__3bTgh\",\"selectLabel\":\"SearchByYear_selectLabel__tWzcV\",\"selectYear\":\"SearchByYear_selectYear__5Gye4\",\"searchText\":\"SearchByYear_searchText__5iNfz\"};","// extracted by mini-css-extract-plugin\nexport default {};","import PropTypes from 'prop-types';\nimport css from './ButtonLoadMore.module.css';\n\nconst ButtonLoadMore = ({ hendleIncrement }) => {\n  return (\n    <div>\n      <button\n        className={css.btnLoadMore}\n        type=\"button\"\n        onClick={() => hendleIncrement()}\n      >\n        Load More\n      </button>\n    </div>\n  );\n};\n\nexport default ButtonLoadMore;\n\nButtonLoadMore.propTypes = {\n  handleIncrement: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport css from './SearchByYear.module.css';\nimport apiTheMovieDB from 'service/kino-api';\nimport { toast } from 'react-toastify';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport ButtonLoadMore from 'components/ButtonLoadMore/ButtonLoadMore';\n\nfunction SearchByYears() {\n  const [selectedYear, setSelectedYear] = useState(0);\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [showButton, setShowButton] = useState(false);\n\n  useEffect(() => {\n    if (selectedYear !== 0) {\n      const fetchMovies = async () => {\n        setLoading(true);\n        setShowButton(true);\n        try {\n          const newYear = await apiTheMovieDB.fetchByYear(page, selectedYear);\n          setMovies(newYear);\n          if (newYear.length === 0) {\n            toast.error(\"sorry, that's all the movies we could find\");\n          }\n        } catch (error) {\n          setError(error);\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchMovies();\n    }\n  }, [page, selectedYear]);\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  const yearOptions = [];\n  const currentYear = new Date().getFullYear();\n  for (let year = currentYear; year >= currentYear - 50; year--) {\n    yearOptions.push(year);\n  }\n\n  const hendleIncrement = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <>\n      <div className={css.selectedYear}>\n        <label className={css.selectLabel} htmlFor=\"year-select\">\n          Select a year:\n        </label>\n        <select\n          className={css.selectYear}\n          name=\"year-select\"\n          id=\"year-select\"\n          value={selectedYear}\n          onChange={event => setSelectedYear(event.target.value)}\n        >\n          <option value={0}>Select a year</option>\n          {yearOptions.map(year => (\n            <option value={year} key={year}>\n              {year}\n            </option>\n          ))}\n        </select>\n      </div>\n      {movies.length > 0 ? (\n        <MoviesList movies={movies} />\n      ) : loading ? (\n        <p>Loading...</p>\n      ) : (\n        <p className={css.searchText}>Please select a year to see movies.</p>\n      )}\n      {showButton && <ButtonLoadMore hendleIncrement={hendleIncrement} />}\n    </>\n  );\n}\n\nexport default SearchByYears;\n","import css from './MoviesBar.module.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport SearchByYears from 'components/SearchByYear/SearchByYear';\n\nfunction MoviesBar() {\n  const location = useLocation();\n\n  return (\n    <div className={css.movieBarWrapper}>\n      <ul className={css.movieBarList}>\n        <li className={css.movieBarListItem}>\n          <Link to={`/movie/actors/`} state={{ from: location }}>\n            Actors\n          </Link>\n        </li>\n      </ul>\n      <div>\n        <SearchByYears />\n      </div>\n    </div>\n  );\n}\nexport default MoviesBar;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport css from './MoviePage.module.css';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport Container from 'components/Container/Container';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport apiTheMovieDB from 'service/kino-api';\nimport { toast } from 'react-toastify';\nimport MoviesBar from 'components/MoviesBar/MoviesBar';\n\nconst MoviePage = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [currentPage, setCurrentPage] = useState(0);\n  const [hasMore, setHasMore] = useState(false);\n\n  const fetchMovies = useCallback(\n    page => {\n      setHasMore(true);\n      apiTheMovieDB\n        .fetchSearchMovie(query, page)\n        .then(newMovies => {\n          if (newMovies.length === 0) {\n            toast.error(\"sorry, that's all the movies we could find\");\n            setHasMore(false);\n          } else {\n            setMovies(prevMovies => [...prevMovies, ...newMovies]);\n            setCurrentPage(page);\n          }\n        })\n        .catch(error => {\n          toast.error('Failed to fetch movies.');\n        });\n    },\n    [query]\n  );\n\n  useEffect(() => {\n    setQuery(new URLSearchParams(location.search).get('query'));\n    setCurrentPage(1);\n  }, [location.search]);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    fetchMovies(1);\n  }, [fetchMovies, query]);\n\n  const handleFormSubmit = newQuery => {\n    if (newQuery === query) {\n      return;\n    }\n    setMovies([]);\n    navigate(`?query=${newQuery}`);\n  };\n\n  const handleLoadMore = () => {\n    fetchMovies(currentPage + 1);\n  };\n\n  return (\n    <>\n      <Container>\n        <section className={css.searchbar}>\n          <Searchbar onSubmit={handleFormSubmit} />\n          <MoviesBar />\n        </section>\n        <section className={css.moviesListSearch}>\n          {movies && (\n            <InfiniteScroll\n              dataLength={movies.length}\n              next={handleLoadMore}\n              hasMore={hasMore}\n              loader={<p>Loading...</p>}\n            >\n              <MoviesList movies={movies} />\n            </InfiniteScroll>\n          )}\n        </section>\n      </Container>\n    </>\n  );\n};\n\nexport default MoviePage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["onSubmit","useState","query","setQuery","className","css","e","preventDefault","toast","name","value","type","autoComplete","placeholder","onChange","currentTarget","toLowerCase","trim","hendleIncrement","onClick","selectedYear","setSelectedYear","movies","setMovies","error","setError","loading","setLoading","page","setPage","showButton","setShowButton","useEffect","fetchMovies","apiTheMovieDB","newYear","length","message","yearOptions","currentYear","Date","getFullYear","year","push","htmlFor","id","event","target","map","MoviesList","location","useLocation","to","state","from","SearchByYear","navigate","useNavigate","currentPage","setCurrentPage","hasMore","setHasMore","useCallback","then","newMovies","prevMovies","catch","URLSearchParams","search","get","Container","newQuery","dataLength","next","loader","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}