{"version":3,"file":"static/js/68.6e59a254.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ButtonBack/ButtonBack.module.css?8b4f","components/ButtonBack/ButtonBack.jsx","webpack://react-homework-template/./src/pages/ActorsPage/ActorsPage.module.css?3c6b","pages/ActorsPage/ActorsPage.jsx","service/kino-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnBack\":\"ButtonBack_btnBack__tjozC\"};","import css from './ButtonBack.module.css';\n\nconst ButtonBack = () => {\n  return (\n    <>\n      <button className={css.btnBack} type=\"button\">\n        &#8592; Go Back\n      </button>\n    </>\n  );\n};\n\nexport default ButtonBack;\n","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"ActorsPage_search__ORjyk\",\"inputActors\":\"ActorsPage_inputActors__fDvqV\",\"actorList\":\"ActorsPage_actorList__-71G7\",\"actorListItem\":\"ActorsPage_actorListItem__uEmdU\",\"actorsName\":\"ActorsPage_actorsName__orZPB\",\"actorsDepartment\":\"ActorsPage_actorsDepartment__K5n6X\",\"actorsRating\":\"ActorsPage_actorsRating__VUZ3H\",\"pagination\":\"ActorsPage_pagination__FWAiz\",\"page\":\"ActorsPage_page__GvG8N\",\"active\":\"ActorsPage_active__vEaUh\",\"previous\":\"ActorsPage_previous__1YRPb\",\"next\":\"ActorsPage_next__xkqqB\",\"disabled\":\"ActorsPage_disabled__9XNEa\"};","import { useState, useEffect } from 'react';\nimport css from './ActorsPage.module.css';\nimport Container from 'components/Container/Container';\nimport apiTheMovieDB from 'service/kino-api';\nimport { toast } from 'react-toastify';\nimport ReactPaginate from 'react-paginate';\nimport { useLocation, Link } from 'react-router-dom';\nimport ButtonBack from 'components/ButtonBack/ButtonBack';\nimport { debounce } from 'lodash';\n\nfunction ActorsPage() {\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredActors, setFilteredActors] = useState([]);\n\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchActors = async (page, searchQuery) => {\n      try {\n        const { results, total_pages } = await apiTheMovieDB.fetchActors(\n          page,\n          searchQuery\n        );\n        if (results.length === 0) {\n          toast.error(\"sorry, that's all the actors we could find\");\n        }\n        setActors(results);\n        setTotalPages(total_pages);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchActors(currentPage, searchQuery);\n  }, [currentPage, searchQuery]);\n\n  useEffect(() => {\n    const filtered = actors.filter(actor =>\n      actor.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n    setFilteredActors(filtered);\n  }, [actors, searchQuery]);\n\n  const handlePageChange = ({ selected }) => {\n    setCurrentPage(selected + 1);\n  };\n\n  const handleSearchChange = debounce(event => {\n    setSearchQuery(event.target.value);\n  }, 300);\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  return (\n    <Container>\n      <div className={css.search}>\n        <input\n          className={css.inputActors}\n          type=\"text\"\n          placeholder=\"Search actors\"\n          value={searchQuery}\n          onChange={handleSearchChange}\n        />\n      </div>\n      <Link to={backLink}>\n        <ButtonBack />\n      </Link>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          <ul className={css.actorList}>\n            {filteredActors.map(\n              (\n                { profile_path, name, known_for_department, popularity, id },\n                index\n              ) => (\n                <Link to={`/actors/movies/${id}`} key={id}>\n                  <li className={css.actorListItem} key={`${id}-${index}`}>\n                    <img\n                      src={\n                        profile_path\n                          ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                          : 'https://via.placeholder.com/200x300'\n                      }\n                      alt={name}\n                      width={200}\n                    />\n                    <p className={css.actorsName}>{name}</p>\n                    <p className={css.actorsDepartment}>\n                      {known_for_department}\n                    </p>\n                    <p className={css.actorsRating}>\n                      {(popularity * 0.5).toFixed(0)}%\n                    </p>\n                  </li>\n                </Link>\n              )\n            )}\n          </ul>\n          <ReactPaginate\n            pageCount={totalPages}\n            pageRangeDisplayed={2}\n            marginPagesDisplayed={1}\n            onPageChange={handlePageChange}\n            containerClassName={css.pagination}\n            pageClassName={css.page}\n            activeClassName={css.active}\n            previousClassName={css.previous}\n            nextClassName={css.next}\n            disabledClassName={css.disabled}\n            breakClassName={css.break}\n            previousLabel={'previous'}\n            nextLabel={'next'}\n            breakLabel={'...'}\n          />\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default ActorsPage;\n","import axios from 'axios';\nconst URL = `https://api.themoviedb.org/3/`;\nconst key = 'f27eea818d2010463700365b0c06a16e';\n\nfunction fetchTrending(page = 1) {\n  return axios\n    .get(`${URL}trending/all/day?api_key=${key}&page=${page}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchSearchMovie(query, page = 1) {\n  return axios\n    .get(`${URL}search/movie?query=${query}&api_key=${key}&page=${page}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchMovieDetalis(id) {\n  return axios\n    .get(`${URL}movie/${id}?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieCredits(id) {\n  return axios\n    .get(`${URL}movie/${id}/credits?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieReview(id) {\n  return axios\n    .get(`${URL}movie/${id}/reviews?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchTrailerMovies(movieId) {\n  return axios\n    .get(`${URL}movie/${movieId}/videos?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchAllgenres() {\n  return axios\n    .get(`${URL}/genre/movie/list?api_key=${key}`)\n    .then(response => response.data.genres);\n}\n\nfunction fetchByGenre(id, page = 1) {\n  return axios\n    .get(`${URL}/discover/movie?api_key=${key}&with_genres=${id}&page=${page}`)\n    .then(response => response.data);\n}\n\nfunction fetchActors(page = 1, query = '') {\n  const url = query\n    ? `${URL}search/person?api_key=${key}&page=${page}&query=${query}`\n    : `${URL}person/popular?api_key=${key}&page=${page}`;\n  return axios.get(url).then(response => response.data);\n}\n\nfunction fetchMoviesbyActors(id, page = 1) {\n  return axios\n    .get(`${URL}person/${id}/movie_credits?api_key=${key}&page=${page}`)\n    .then(response => response.data.cast);\n}\n\nfunction fetchByYear(page = 1, selectedYear) {\n  return axios\n    .get(\n      `${URL}discover/movie?api_key=${key}&sort_by=popularity.desc&page=${page}&primary_release_year=${selectedYear}`\n    )\n    .then(response => response.data.results);\n}\n\nconst apiTheMovieDB = {\n  fetchMoviesbyActors,\n  fetchTrending,\n  fetchSearchMovie,\n  fetchMovieDetalis,\n  fetchMovieCredits,\n  fetchMovieReview,\n  fetchTrailerMovies,\n  fetchAllgenres,\n  fetchByGenre,\n  fetchActors,\n  fetchByYear,\n};\n\nexport default apiTheMovieDB;\n"],"names":["className","css","type","useState","actors","setActors","loading","setLoading","error","setError","currentPage","setCurrentPage","totalPages","setTotalPages","searchQuery","setSearchQuery","filteredActors","setFilteredActors","backLink","useLocation","state","from","useEffect","fetchActors","page","apiTheMovieDB","results","total_pages","length","toast","filtered","filter","actor","name","toLowerCase","includes","handleSearchChange","debounce","event","target","value","message","Container","placeholder","onChange","to","ButtonBack","map","index","profile_path","known_for_department","popularity","id","src","alt","width","toFixed","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","selected","containerClassName","pageClassName","activeClassName","previousClassName","nextClassName","disabledClassName","breakClassName","previousLabel","nextLabel","breakLabel","URL","key","fetchMoviesbyActors","axios","then","response","data","cast","fetchTrending","fetchSearchMovie","query","fetchMovieDetalis","fetchMovieCredits","fetchMovieReview","fetchTrailerMovies","movieId","fetchAllgenres","genres","fetchByGenre","url","fetchByYear","selectedYear"],"sourceRoot":""}